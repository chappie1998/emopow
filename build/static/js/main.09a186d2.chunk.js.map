{"version":3,"sources":["candy-machine.ts","images/logo.jpg","images/bg.jpg","images/gif.gif","images/solana_logo.png","images/pain.jpg","images/anger.jpg","images/happy.jpg","images/lust.jpg","images/sad.jpg","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","ms","Home","styled","WalletDialogButton","div","Button","props","useState","setBalance","setIsSoldOut","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","refreshCandyMachineState","useEffect","getBalance","balance","LAMPORTS_PER_SOL","styles","backgroundImage","bgImg","backgroundAttachment","backgroundPosition","backgroundSize","minHeight","width","navitem","color","para","fontSize","marginBottom","letterSpacing","document","title","style","Container","fluid","Navbar","className","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Row","Col","borderRadius","height","alt","src","logo","sol","lg","marginTop","gif","pain","anger","happy","lust","sad","target","rel","xmlns","viewBox","d","Snackbar","autoHideDuration","onClose","Alert","process","network","Connection","startDateSeed","parseInt","theme","createTheme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","padding","startIcon","marginRight","endIcon","marginLeft","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","txTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09a186d2.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","export default __webpack_public_path__ + \"static/media/logo.3ced544f.jpg\";","export default __webpack_public_path__ + \"static/media/bg.3ced544f.jpg\";","export default __webpack_public_path__ + \"static/media/gif.5c5d1906.gif\";","export default __webpack_public_path__ + \"static/media/solana_logo.88dd9cd2.png\";","export default __webpack_public_path__ + \"static/media/pain.5bed75b9.jpg\";","export default __webpack_public_path__ + \"static/media/anger.cbfeb251.jpg\";","export default __webpack_public_path__ + \"static/media/happy.102bbd84.jpg\";","export default __webpack_public_path__ + \"static/media/lust.176c8879.jpg\";","export default __webpack_public_path__ + \"static/media/sad.e4bb0ef7.jpg\";","import { useEffect, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport {CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\n// for the webpage \nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Navbar, Nav, Row, Col, Button, Form} from 'react-bootstrap';\nimport logo from './images/logo.jpg';\nimport bgImg from './images/bg.jpg'\nimport gif from './images/gif.gif'\nimport sol from './images/solana_logo.png'\nimport pain from './images/pain.jpg'\nimport anger from './images/anger.jpg'\nimport happy from './images/happy.jpg'\nimport lust from './images/lust.jpg'\nimport sad from './images/sad.jpg'\n\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      refreshCandyMachineState();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  const styles = {\n    backgroundImage: 'url('+bgImg+')',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    minHeight: '100%',\n    width: '100%',\n  };\n  \n  const navitem = {\n    color: 'white',\n  }\n  const para = {\n    fontSize: '20px',\n    marginBottom: '30px',\n    letterSpacing: '4px',\n  }\n\n  // Webpage title\n  document.title = 'Emopow'\n  \n  return (\n    <main style={styles}>\n      <Container fluid id=\"home\">\n      <Navbar className=\"pt-5\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand style={navitem} href=\"#home\">Home</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto\">\n              <Nav.Link style={navitem} href=\"#About\">About</Nav.Link>\n              <Nav.Link style={navitem} href=\"#Emotions\">Emotions</Nav.Link>\n              <Nav.Link style={navitem} href=\"#FAQ\">FAQ</Nav.Link>\n              <Nav.Link style={navitem} href=\"#Team\">Team</Nav.Link>\n              <Nav.Link style={navitem} href=\"#contact-us\">Contact Us</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Container>\n      <Row className=\"mt-3\">\n          <Col className=\"mt-3 d-flex justify-content-center text-center\">\n            <img style={{borderRadius: \"50%\"}}\n              height=\"150\"\n              alt=\"logo\"\n              src={logo}>\n            </img>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"d-flex justify-content-center text-center\">\n            <h1 className=\"white\">EMOPOW</h1>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col className=\"d-flex justify-content-center text-center\">\n            <h2 className=\"white\">Emotions on solana</h2>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col className=\"d-flex justify-content-center text-center\">\n            <h3 className=\"white\">\n              Built on\n            </h3>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col className=\"d-flex justify-content-center text-center\">\n            <img\n              height=\"50\"\n              alt=\"Solana\"\n              src={sol}>\n            </img>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"d-flex justify-content-center text-center\">\n            <div className=\"tran-box\">\n              <strong>Launch Date <br></br><br></br></strong>\n              Join Discord to know more\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"d-flex justify-content-center text-center\">\n            {/* <div className=\"tran-box\">\n              <MintContainer>\n                {!wallet ? (\n                  <ConnectButton>Connect Wallet</ConnectButton>\n                ) : (\n                  <MintButton\n                    disabled={isSoldOut || isMinting || !isActive || true}\n                    onClick={onMint}\n                    variant=\"warning\"\n                  >\n                    {isSoldOut ? (\n                      \"SOLD OUT\"\n                    ) : isActive ? (\n                      isMinting ? (\n                        <CircularProgress />\n                      ) : (\n                        \"Coming Soon\"\n                      )\n                    ) : (\n                      <Countdown\n                        date={startDate}\n                        onMount={({ completed }) => completed && setIsActive(true)}\n                        onComplete={() => setIsActive(true)}\n                        renderer={renderCounter}\n                      />\n                    )}\n                  </MintButton>\n                )}\n              </MintContainer>\n            </div> */}\n          </Col>\n        </Row>\n        \n      </Container>\n      </Container>\n\n      <div className=\"tran-bg\" id=\"About\">\n        <Container>\n        <Row className=\"mt-3\">\n            <Row className=\"mt-5\">\n              <h1 className=\"white justify-content-center text-center\">ABOUT</h1> \n            </Row>\n          <Col className=\"mt-5\" lg=\"8\">\n            <Row className=\"mt-2 white\" style={para}>\n              <h4>\n                Emopow makes it easy for anyone to show their emotions and feelings through arts and crafts, demonstrating their thoughts and feelings in a new and creative way.\n              </h4> \n            </Row>\n            <Row className=\"mt-5 white\" style={para}>\n              <strong>Express yourself: </strong>\n              Making Arts is therapeutic. Emopow is a great way to express yourself and let it all out while having fun at the same time.\n            </Row>\n            <Row className=\"mt-5 white\" style={para}>\n            <strong>And it's not just always humans: </strong>\n              Don't think this is just for humans - Emopow is designed for any living thing emotions. You can show your pets as well!\n            </Row>\n            {/* <Row className=\"mt-4 white\" style={para}>\n              <strong>WARNING: </strong> The rarer they are, the harder they are to tame, so be careful!\n            </Row> */}\n          </Col>\n          <Col lg=\"4\" className=\"d-flex justify-content-center text-center\">\n            <img style={{borderRadius: \"50%\", marginTop:\"100px\"}}\n              height=\"400\"\n              width=\"400\"\n              alt=\"\"\n              src={gif}>\n            </img>\n          </Col>\n        </Row>\n        </Container>\n      </div>\n\n\n      <div id=\"Emotions\">\n        <Container>\n          <Row className=\"mt-3 d-flex justify-content-center text-center\">\n            <Col className=\"mt-5\">\n              <h1 className=\"white\">CURRENT EMOTIONS ON EMOPOW</h1>\n            </Col>\n          </Row>\n\n          <div className=\"jss674\">\n            <Row>\n              <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <h2 className=\"justify-content-center text-center\">Pain</h2>\n                  <p className=\"tran-para\">\n                    Pain in not just a world, let's show what it is by the art\n                  </p>\n                  <img style={{borderRadius: \"50%\", marginTop:\"10px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={pain}>\n                  </img>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <h2 className=\"justify-content-center text-center\">Anger</h2>\n                  <p className=\"tran-para\">\n                    Anger in not just a world, let's show what it is by the art\n                  </p>\n                  <img style={{borderRadius: \"50%\", marginTop:\"10px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={anger}>\n                  </img>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <h2 className=\"justify-content-center text-center\">Happy</h2>\n                  <p className=\"tran-para\">\n                    Happy in not just a world, let's show what it is by the art\n                  </p>\n                  <img style={{borderRadius: \"50%\", marginTop:\"10px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={happy}>\n                  </img>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <h2 className=\"justify-content-center text-center\">Lust</h2>\n                  <p className=\"tran-para\">\n                    Lust in not just a world, let's show what it is by the art\n                  </p>\n                  <img style={{borderRadius: \"50%\", marginTop:\"10px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={lust}>\n                  </img>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <h2 className=\"justify-content-center text-center\">Sad</h2>\n                  <p className=\"tran-para\">\n                    Sadness in not just a world, let's show what it is by the art\n                  </p>\n                  <img style={{borderRadius: \"50%\", marginTop:\"10px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={sad}>\n                  </img>\n                </div>\n              </Col>\n              {/* <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <h2 className=\"justify-content-center text-center\">Happy</h2>\n                  <p className=\"tran-para\">\n                    Happy in not just a world, let's show what it is by the art\n                  </p>\n                  <img style={{borderRadius: \"50%\", marginTop:\"10px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={gif}>\n                  </img>\n                </div>\n              </Col> */}\n            </Row>\n          </div>\n        </Container>\n      </div>\n      \n\n      <div className=\"tran-bg\" id=\"FAQ\">\n        <Container>\n          <Row className=\"mt-3 d-flex justify-content-center text-center\">\n            <Col className=\"mt-5\">\n              <h1 className=\"white\">FREQUENTLY ASKED QUESTIONS</h1>\n            </Col>\n          </Row>\n\n          <div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n                <strong>Q.</strong> What is the total supply ?\n              </p>\n              <p className=\"tran-para\">\n                <strong>A.</strong> First We will launch with a fixed supply to mint after that we will open it for the artist to show their emotions through arts.\n              </p>\n            </div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n                <strong>Q.</strong> What's the mint price ?\n              </p>\n              <p className=\"tran-para\">\n                <strong>A.</strong> Mint price is 2.7 Sol, because there are total 27 emotions in human.\n              </p>\n            </div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n                <strong>Q.</strong> Is there a limit to how many Emopow I can mint ?\n              </p>\n              <p className=\"tran-para\">\n                <strong>A.</strong> No, You can have as many emotions as you want.\n              </p>\n            </div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n                <strong>Q.</strong> Will there be a whitelist or a pre-sale ?\n              </p>\n              <p className=\"tran-para\">\n                <strong>A.</strong> No, but top 3 people with the most minting count will win a free emotion.\n              </p>\n            </div>\n            {/* <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n                <strong>Q.</strong> What about secondary sale royalties ?\n              </p>\n              <p className=\"tran-para\">\n                <strong>A.</strong> Second sale royalties will be 3% and 50% of them will be given to a lucky holder each week.\n              </p>\n            </div> */}\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n                <strong>Q.</strong> When will you launch ?\n              </p>\n              <p className=\"tran-para\">\n                <strong>A.</strong> Join our discord to know more about this.\n              </p>\n            </div>\n          </div>\n        </Container>\n      </div>\n\n\n      <div>\n        <Container>\n          <Row className=\"mt-3 d-flex justify-content-center text-center\">\n            <Col className=\"mt-5\">\n              <h1 className=\"white\">Team</h1>\n            </Col>\n          </Row>\n\n          <div className=\"jss674\">\n            <Row>\n              <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <img style={{borderRadius: \"50%\", marginBottom: \"50px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={pain}>\n                  </img>\n                  <h2 className=\"justify-content-center text-center\">Mr. Pain</h2>\n                  <p className=\"tran-para\">\n                    The Co-founder\n                  </p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <img style={{borderRadius: \"50%\", marginBottom: \"50px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={happy}>\n                  </img>\n                  <h2 className=\"justify-content-center text-center\">Mr. Happy</h2>\n                  <p className=\"tran-para\">\n                    The Artist\n                  </p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"mt-5 tran-box road-box .jss675 justify-content-center text-center\">\n                  <img style={{borderRadius: \"50%\", marginBottom: \"50px\"}}\n                    height=\"200\"\n                    width=\"200\"\n                    alt=\"\"\n                    src={anger}>\n                  </img>\n                  <h2 className=\"justify-content-center text-center\">Mr Anger</h2>\n                  <p className=\"tran-para\">\n                    The Marketing Head\n                  </p>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n\n\n      {/* <div className=\"tran-bg\" id=\"\">\n        <Container>\n          <Row className=\"mt-5 d-flex justify-content-center text-center\">\n            <Col className=\"mt-5\">\n              <h1 className=\"white\">What will happen once mint is done ?</h1>\n            </Col>\n          </Row>\n\n          <div className=\"jss674\">\n            <div className=\"mt-5 tran-box road-box .jss675\">\n              <p className=\"tran-para\">\n                Rewards for rarest attributes mint, list will be on twitter, 1.33 sol reward/attribute\n              </p>\n            </div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n              Listing on marketplaces\n              </p>\n            </div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n                KoKongz HUNT : 432 sol for the winner !\n              </p>\n            </div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n                KoKongz lottery : 10 lucky holders will win 1200$ each\n              </p>\n            </div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n              Something that was never done before will happen after the KoKongz HUNT! We'll reward our community by a really innovative way ( 1month after mint is complete)\n              </p>\n            </div>\n            <div className=\"mt-5 tran-box road-box\">\n              <p className=\"tran-para\">\n              Each week : 50% of royaltie fees to a random holder\n              </p>\n            </div>\n          </div>\n        </Container>\n      </div> */}\n\n      {/* <div id=\"attributes\">\n        <Container>\n          <Row className=\"mt-3 d-flex justify-content-center text-center\">\n              <Col className=\"mt-5\">\n                <h1 className=\"white\">Attributes</h1>\n              </Col>\n            </Row>\n\n          <Row className=\"mt-3\">\n            <Col md={5} className=\"tran-box road-box\">\n              <h1 className=\"white\">Eyes</h1>\n                <div><span className=\"dot\"></span> Stars 7%</div>\n                <div><span className=\"dot\"></span>Sad 7%</div>\n                <div><span className=\"dot\"></span> Hypnotized 5.5%</div>\n                <div><span className=\"dot\"></span> Zombie 0.5%</div>\n                <div><span className=\"dot\"></span> 3D Glasses 5%</div>\n                <div><span className=\"dot\"></span> Sleepy 6.5%</div>\n                <div><span className=\"dot\"></span> Sunglasses 7%</div>\n                <div><span className=\"dot\"></span> Heart 4.5%</div>\n                <div><span className=\"dot\"></span> Laser 4.5%</div>\n                <div><span className=\"dot\"></span> Eyepatch 3%</div>\n                <div><span className=\"dot\"></span> Holographic Glasses 1.5%</div>\n                <div><span className=\"dot\"></span> VR visualizer 3%</div>\n                <div><span className=\"dot\"></span> Casual glasses 18%</div>\n                <div><span className=\"dot\"></span> Crosses In Eyes 4%</div>\n                <div><span className=\"dot\"></span> Monocle 3%</div>\n                <div><span className=\"dot\"></span> Normal Eyes 20%</div>\n            </Col>\n            <Col md={{ span: 5, offset: 1 }} className=\"tran-box road-box\">\n              <h1 className=\"white\">Upper Clothes</h1>\n                <div><span className=\"dot\"></span>Casual Coat 7%</div>\n                <div><span className=\"dot\"></span>Sad 7%</div>\n                <div><span className=\"dot\"></span> Casual t shirt 7%</div>\n                <div><span className=\"dot\"></span> Hawaiian shirt 7%</div>\n                <div><span className=\"dot\"></span> Leather jacket 7%</div>\n                <div><span className=\"dot\"></span> Lumberjack shirt 7%</div>\n                <div><span className=\"dot\"></span> Sweatshirt 6%</div>\n                <div><span className=\"dot\"></span> Work vest 5%</div>\n                <div><span className=\"dot\"></span> Smoking 2%</div>\n                <div><span className=\"dot\"></span> Judoka kimono 4%</div>\n                <div><span className=\"dot\"></span> Casual dress 7%</div>\n                <div><span className=\"dot\"></span> Lifejacket 7%</div>\n                <div><span className=\"dot\"></span> Doctor's shirt 5%</div>\n                <div><span className=\"dot\"></span> Red dress with white points on it 5%</div>\n                <div><span className=\"dot\"></span> Captain hook's clothes 3%</div>\n                <div><span className=\"dot\"></span> Space suit 1%</div>\n                <div><span className=\"dot\"></span> Baseball shirt 2%</div>\n                <div><span className=\"dot\"></span> Super-hero shirt 2%</div>\n                <div><span className=\"dot\"></span> Army tee 6%</div>\n                <div><span className=\"dot\"></span> Dirty t-shirt 6%</div>\n                <div><span className=\"dot\"></span> Prisoner t-shirt 4%</div>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col md={5} className=\"tran-box road-box\">\n              <h1 className=\"white\">Hat</h1>\n                <div><span className=\"dot\"></span> Cowboy hat 7%</div>\n                <div><span className=\"dot\"></span> Army hat 7%</div>\n                <div><span className=\"dot\"></span> Beanie 7%</div>\n                <div><span className=\"dot\"></span> French beret 7%</div>\n                <div><span className=\"dot\"></span> Fisherman's hat 7%</div>\n                <div><span className=\"dot\"></span> Crown 1%</div>\n                <div><span className=\"dot\"></span> Sea captain's hat 6%</div>\n                <div><span className=\"dot\"></span> Bike's hat 5%</div>\n                <div><span className=\"dot\"></span> Black Bandana 7%</div>\n                <div><span className=\"dot\"></span> White bandana 7%</div>\n                <div><span className=\"dot\"></span> Straw hat 4%</div>\n                <div><span className=\"dot\"></span> Policeman hat 5%</div>\n                <div><span className=\"dot\"></span> Ninja's headband 5%</div>\n                <div><span className=\"dot\"></span> Space helmet 2%</div>\n                <div><span className=\"dot\"></span> Long blonde hair 4%</div>\n                <div><span className=\"dot\"></span> Mcdonald's hat 3%</div>\n                <div><span className=\"dot\"></span> Cooking hat 6%</div>\n                <div><span className=\"dot\"></span> Devil corn 3%</div>\n                <div><span className=\"dot\"></span> Angel oracle 3%</div>\n            </Col>\n            <Col md={{ span: 5, offset: 1 }} className=\"tran-box road-box\">\n              <h1 className=\"white\">Fur</h1>\n                <div><span className=\"dot\"></span> Black 10%</div>\n                <div><span className=\"dot\"></span> Blue 10%</div>\n                <div><span className=\"dot\"></span> Turquoise 10%</div>\n                <div><span className=\"dot\"></span> Cream 10%</div>\n                <div><span className=\"dot\"></span> Brown 10%</div>\n                <div><span className=\"dot\"></span> Pink 10%</div>\n                <div><span className=\"dot\"></span> Solid gold 2%</div>\n                <div><span className=\"dot\"></span> Red 10%</div>\n                <div><span className=\"dot\"></span> Zombie 3.5%</div>\n                <div><span className=\"dot\"></span> Grey 10%</div>\n                <div><span className=\"dot\"></span> RoBot 4.5%</div>\n                <div><span className=\"dot\"></span> Yellow 10%</div>\n            </Col>\n          </Row>\n\n          <Row className=\"mt-3\">\n            <Col md={5} className=\"tran-box road-box\">\n              <h1 className=\"white\">Mouth</h1>\n                <div><span className=\"dot\"></span> Diamond teeth 5%</div>\n                <div><span className=\"dot\"></span> Mulitcouloured teeth 5%</div>\n                <div><span className=\"dot\"></span> White teeth 55%</div>\n                <div><span className=\"dot\"></span> Dirty teeth 25%</div>\n                <div><span className=\"dot\"></span> Beard 10%</div>\n            </Col>\n            <Col md={{ span: 5, offset: 1 }} className=\"tran-box road-box\">\n              <h1 className=\"white\">Hands</h1>\n                <div><span className=\"dot\"></span> Boxing gloves 17%</div>\n                <div><span className=\"dot\"></span> Iron fist 14%</div>\n                <div><span className=\"dot\"></span> Cyborg fist 4%</div>\n                <div><span className=\"dot\"></span> Normal fist 65%</div>\n            </Col>\n          </Row>\n\n          <Row className=\"mt-3\">\n            <Col md={5} className=\"tran-box road-box\">\n              <h1 className=\"white\">Feets</h1>\n                <div><span className=\"dot\"></span> Casual black shoes 11%</div>\n                <div><span className=\"dot\"></span> Casual white shoes 11%</div>\n                <div><span className=\"dot\"></span> High shoes black 10%</div>\n                <div><span className=\"dot\"></span> Robots feet 3%</div>\n                <div><span className=\"dot\"></span> Regular 65%</div>\n            </Col>\n            <Col md={{ span: 5, offset: 1 }} className=\"tran-box road-box\">\n              <h1 className=\"white\">Chains</h1>\n                <div><span className=\"dot\"></span> Gold 12.5%</div>\n                <div><span className=\"dot\"></span> Chain with eth logo 12.5%</div>\n                <div><span className=\"dot\"></span> Chain with btc logo 12.5%</div>\n                <div><span className=\"dot\"></span> Shiny jewels chain 12.5%</div>\n                <div><span className=\"dot\"></span> No chain 50%</div>\n            </Col>\n          </Row>\n\n          <Row className=\"mt-3\">\n            <Col md={5} className=\"tran-box road-box\">\n              <h1 className=\"white\">Backgrounds</h1>\n                <div><span className=\"dot\"></span> Forest 5%</div>\n                <div><span className=\"dot\"></span> Beach (with sun) 5%</div>\n                <div><span className=\"dot\"></span> Night (with moon) 5%</div>\n                <div><span className=\"dot\"></span> Money (us dollars packs) 5%</div>\n                <div><span className=\"dot\"></span> Eclipse 5%</div>\n                <div><span className=\"dot\"></span> Grey 10%</div>\n                <div><span className=\"dot\"></span> Blue 10%</div>\n                <div><span className=\"dot\"></span> Orange 10%</div>\n                <div><span className=\"dot\"></span> Yellow 10%</div>\n                <div><span className=\"dot\"></span> Pastel Green 5%</div>\n                <div><span className=\"dot\"></span> Pink 5%</div>\n                <div><span className=\"dot\"></span> Grass green 10%</div>\n                <div><span className=\"dot\"></span> Red 10%</div>\n                <div><span className=\"dot\"></span> Black 5%</div>\n            </Col>\n            <Col md={{ span: 5, offset: 1 }} className=\"tran-box road-box\">\n              <h1 className=\"white\">Head</h1>\n                <div><span className=\"dot\"></span> Black 9%</div>\n                <div><span className=\"dot\"></span> Blue 9%</div>\n                <div><span className=\"dot\"></span> Brown 9%</div>\n                <div><span className=\"dot\"></span> Cream 9%</div>\n                <div><span className=\"dot\"></span> Gold 1%</div>\n                <div><span className=\"dot\"></span> Grey 9%</div>\n                <div><span className=\"dot\"></span> Pink 9%</div>\n                <div><span className=\"dot\"></span> Red 9%</div>\n                <div><span className=\"dot\"></span> Robot 9%</div>\n                <div><span className=\"dot\"></span> Turquoise 9%</div>\n                <div><span className=\"dot\"></span> Yellow 9%</div>\n                <div><span className=\"dot\"></span> Zombie 9%</div>\n            </Col>\n          </Row>\n\n          <Row className=\"mt-3 d-flex justify-content-center\">\n            <Col md={5} className=\"tran-box road-box\">\n              <div style={{marginLeft:\"0\"}}>\n                <h1 className=\"white\">Lower Clothes</h1>\n                  <div><span className=\"dot\"></span> Blue jeans 12%</div>\n                  <div><span className=\"dot\"></span> Floral short 12%</div>\n                  <div><span className=\"dot\"></span> Black short 12%</div>\n                  <div><span className=\"dot\"></span> White short 12%</div>\n                  <div><span className=\"dot\"></span> Orange short 12%</div>\n                  <div><span className=\"dot\"></span> Army short 4%</div>\n                  <div><span className=\"dot\"></span> With thongs 12%</div>\n                  <div><span className=\"dot\"></span> Black thongs 12%</div>\n                  <div><span className=\"dot\"></span> Floral thongs 12%</div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div> */}\n\n      <div className=\"tran-bg pt-3 pb-5\" id=\"contact-us\">\n        <Container>\n          <Row className=\"mt-5 d-flex justify-content-center text-center\">\n            <Col>\n              <h1 className=\"white\">\n                Follow the news about us\n              </h1>\n            </Col>\n          </Row>\n          <Row className=\"mt-5 mb-5 d-flex justify-content-center text-center\">\n            <Col>\n            <a href=\"https://discord.gg/mFSaHEjx\" target=\"_blank\" rel=\"noreferrer\">\n            <svg className=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M464 66.52A50 50 0 00414.12 17L97.64 16A49.65 49.65 0 0048 65.52V392c0 27.3 22.28 48 49.64 48H368l-13-44 109 100zM324.65 329.81s-8.72-10.39-16-19.32C340.39 301.55 352.5 282 352.5 282a139 139 0 01-27.85 14.25 173.31 173.31 0 01-35.11 10.39 170.05 170.05 0 01-62.72-.24 184.45 184.45 0 01-35.59-10.4 141.46 141.46 0 01-17.68-8.21c-.73-.48-1.45-.72-2.18-1.21-.49-.24-.73-.48-1-.48-4.36-2.42-6.78-4.11-6.78-4.11s11.62 19.09 42.38 28.26c-7.27 9.18-16.23 19.81-16.23 19.81-53.51-1.69-73.85-36.47-73.85-36.47 0-77.06 34.87-139.62 34.87-139.62 34.87-25.85 67.8-25.12 67.8-25.12l2.42 2.9c-43.59 12.32-63.44 31.4-63.44 31.4s5.32-2.9 14.28-6.77c25.91-11.35 46.5-14.25 55-15.21a24 24 0 014.12-.49 205.62 205.62 0 0148.91-.48 201.62 201.62 0 0172.89 22.95s-19.13-18.15-60.3-30.45l3.39-3.86s33.17-.73 67.81 25.16c0 0 34.87 62.56 34.87 139.62 0-.28-20.35 34.5-73.86 36.19z\"></path><path d=\"M212.05 218c-13.8 0-24.7 11.84-24.7 26.57s11.14 26.57 24.7 26.57c13.8 0 24.7-11.83 24.7-26.57.25-14.76-10.9-26.57-24.7-26.57zM300.43 218c-13.8 0-24.7 11.84-24.7 26.57s11.14 26.57 24.7 26.57c13.81 0 24.7-11.83 24.7-26.57S314 218 300.43 218z\"></path></svg>\n            </a>\n            </Col>\n            {/* <Col>\n              <svg className=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M349.33 69.33a93.62 93.62 0 0193.34 93.34v186.66a93.62 93.62 0 01-93.34 93.34H162.67a93.62 93.62 0 01-93.34-93.34V162.67a93.62 93.62 0 0193.34-93.34h186.66m0-37.33H162.67C90.8 32 32 90.8 32 162.67v186.66C32 421.2 90.8 480 162.67 480h186.66C421.2 480 480 421.2 480 349.33V162.67C480 90.8 421.2 32 349.33 32z\"></path><path d=\"M377.33 162.67a28 28 0 1128-28 27.94 27.94 0 01-28 28zM256 181.33A74.67 74.67 0 11181.33 256 74.75 74.75 0 01256 181.33m0-37.33a112 112 0 10112 112 112 112 0 00-112-112z\"></path></svg>\n            </Col> */}\n            <Col>\n            <a href=\"https://twitter.com/KokongzNFTs\" target=\"_blank\" rel=\"noreferrer\">\n            <svg className=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M496 109.5a201.8 201.8 0 01-56.55 15.3 97.51 97.51 0 0043.33-53.6 197.74 197.74 0 01-62.56 23.5A99.14 99.14 0 00348.31 64c-54.42 0-98.46 43.4-98.46 96.9a93.21 93.21 0 002.54 22.1 280.7 280.7 0 01-203-101.3A95.69 95.69 0 0036 130.4c0 33.6 17.53 63.3 44 80.7A97.5 97.5 0 0135.22 199v1.2c0 47 34 86.1 79 95a100.76 100.76 0 01-25.94 3.4 94.38 94.38 0 01-18.51-1.8c12.51 38.5 48.92 66.5 92.05 67.3A199.59 199.59 0 0139.5 405.6a203 203 0 01-23.5-1.4A278.68 278.68 0 00166.74 448c181.36 0 280.44-147.7 280.44-275.8 0-4.2-.11-8.4-.31-12.5A198.48 198.48 0 00496 109.5z\"></path></svg>        \n            </a>  \n            </Col>\n          </Row>\n          {/* <Row className=\"mt-5 d-flex justify-content-center text-center\">\n            <Col>\n              <h3 className=\"white\">\n                contact@degenlizzy.art\n              </h3>\n            </Col>\n          </Row> */}\n          {/* <Row className=\"mt-3 d-flex justify-content-center text-center\">\n            <Col>\n              <h3 className=\"white\">\n              Read our Terms and Conditions\n              </h3>\n            </Col>\n          </Row> */}\n          <Row className=\"mt-3 d-flex justify-content-center text-center\">\n            <Col>\n              <h3 className=\"white\">\n              Copyright 2021 by Emopow. All rights reserved.\n              </h3>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </main>\n\n\n\n\n\n    // <main>\n      // {wallet && <p>Total Available: {itemsAvailable}</p>}\n\n      // {wallet && <p>Redeemed: {itemsRedeemed}</p>}\n\n      // {wallet && <p>Remaining: {itemsRemaining}</p>}\n\n    //   <MintContainer>\n    //     {!wallet ? (\n    //       <ConnectButton>Connect Wallet</ConnectButton>\n    //     ) : (\n    //       <MintButton\n    //         disabled={isSoldOut || isMinting || !isActive}\n    //         onClick={onMint}\n    //         variant=\"contained\"\n    //       >\n    //         {isSoldOut ? (\n    //           \"SOLD OUT\"\n    //         ) : isActive ? (\n    //           isMinting ? (\n    //             <CircularProgress />\n    //           ) : (\n    //             \"MINT\"\n    //           )\n    //         ) : (\n    //           <Countdown\n    //             date={startDate}\n    //             onMount={({ completed }) => completed && setIsActive(true)}\n    //             onComplete={() => setIsActive(true)}\n    //             renderer={renderCounter}\n    //           />\n    //         )}\n    //       </MintButton>\n    //     )}\n    //   </MintContainer>\n\n    //   <Snackbar\n    //     open={alertState.open}\n    //     autoHideDuration={6000}\n    //     onClose={() => setAlertState({ ...alertState, open: false })}\n    //   >\n    //     <Alert\n    //       onClose={() => setAlertState({ ...alertState, open: false })}\n    //       severity={alertState.severity}\n    //     >\n    //       {alertState.message}\n    //     </Alert>\n    //   </Snackbar>\n    // </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletDialogProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                config={config}\n                connection={connection}\n                startDate={startDateSeed}\n                treasury={treasury}\n                txTimeout={txTimeout}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}